{% liquid
	assign product_price         = product.selected_or_first_available_variant.price | money_without_trailing_zeros | replace: ',', ' '
	assign product_compare_price = product.selected_or_first_available_variant.compare_at_price | money_without_trailing_zeros | replace: ',', ' '
    assign current_variant       = product.selected_or_first_available_variant
	assign selected_variant      = product.selected_variant
%}

<div id="product">
	<div class="product__way-wrapper container">
		<ul class="product__way-list">
			<li class="product__way-item">
				Женщинам
			</li>
			<li class="product__way-item">
				<span class="product__way-hug">─</span>
				Обувь
			</li>
			<li class="product__way-item">
				<span class="product__way-hug">─</span>
				Туфли
			</li>
			<li class="product__way-item">
				<span class="product__way-hug">─</span>
				Туфли Jil Sander
			</li>
		</ul>
	</div>

	<div class="product__content">
		<div class="product__gallery">
			<div class="swiper mySideBarSwiper product__gallery-list">
				<div class="swiper-wrapper product__gallery-list-wrapper">
					{% for media in product.media %}
						<div class="product__gallery-item swiper-slide">
							<img src="{{ media.src | img_url: 'master' }}" alt="{{ media.alt }}">
						</div>
					{% endfor %}
				</div>
			</div>
			<div class="swiper myMainSwiper product__main-photo">
				<div class="swiper-wrapper">
					{% for media in product.media %}
						<div class="swiper-slide">
							<img src="{{ media.src | img_url: 'master' }}" alt="{{ media.alt }}">
						</div>
					{% endfor %}
				</div>
				<div class="swiper-pagination"></div>
			</div>
		</div>
		<div class="product__actions">
			<div class="product__collection-name">
				{% for collection in product.collections %}
					{{ collection.title }}
				{% endfor %}
			</div>
			<div class="product__name">
				{{ product.title }}
			</div>
			<div class="product__code">
				Артикул: <span class="variant__sku">{{ current_variant.sku }}</span>
			</div>
			<div class="product__price">
				<div class="product__price-current">
					{{ product_price | slice: 1, product_price.size }} грн
				</div>
				<div class="product__price-previous">
					{{ product_compare_price | slice: 1, product_compare_price.size }} грн
				</div>
			</div>
			{% form 'product', product, id: 'product-form' %}
				<div class="product__size">
					<div class="product__size-title">
						Размер
					</div>
					<div class="product__size-select select" id="size-select">
						<input
								class="product__id"
								type="hidden" name="id"
								value="{% if selected_variant %}{{ selected_variant.id }}{% else %}none{% endif %}">
						<div class="select__header product__size-select-header">
							<span class="select__current">
								{% if selected_variant %}
									{{ selected_variant.title }}
								{% else %}
									Выбрать размер
								{% endif %}
							</span>
							<div class="select__header-img">
								<img alt="select icon" src="{{ "select-icon.svg" | asset_url }}" />
							</div>
						</div>

						<div class="select__body">
							{% for variant in product.variants %}
								<div
									data-variant-id="{{ variant.id }}"
									data-variant-sku="{{ variant.sku }}"
									data-variant-price="{{ variant.price }}"
									data-variant-compare-price="{{ variant.compare_at_price }}"
									class="select__item select__product-item {% if variant.available == false %}disabled{% endif %}"
								>
									{{ variant.title }}
								</div>
							{% endfor %}
						</div>
					</div>
				</div>
				<div class="product__error-alert">
					<img alt="error-icon" src="{{ "error-icon.svg" | asset_url }}">
					<p>Пожалуйста, заполните поле</p>
				</div>
				<div class="product__action-buttons">
					<input class="product__action-button black-button" type="submit" value="Добавить в корзину" />
					<input class="product__action-button" type="submit" value="Оформить заказ" />
				</div>
			{% endform %}
		</div>
	</div>
	<div class="container">
		<div class="product__about">
			<ul class="product__about-list">
				{% for field in product.metafields.fields %}
					{% if field[1] and field[0] %}
						<li class="product__about-item">
							<div class="product__about-title">
								{{ field[0] }}
								<div class="product__sub-title-opener">
									<img src="{{ 'submenu-item-open.svg' | asset_url }}" class="open" alt="nav opener">
									<img src="{{ 'submenu-item-close.svg' | asset_url }}" class="close" alt="nav opener">
								</div>
							</div>
							<div class="product__about-sub-title">
								{% capture string_with_newlines %}
									{{ field[1] }}
								{% endcapture %}
								{{ string_with_newlines | newline_to_br }}
							</div>
						</li>
					{% endif %}
				{% endfor %}
			</ul>
		</div>
	</div>
</div>

<script type="module">
    import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.esm.browser.min.js';

	const productAboutList = document.querySelector('.product__about-list');
	const productForm = document.querySelector('#product-form');
	const productId = productForm.querySelector('.product__id');
	const formErrorAlert = productForm.querySelector('.product__error-alert');
	const variantSku = document.querySelector('.variant__sku');
	const variantPrice = document.querySelector('.product__price-current');
	const variantComparePrice = document.querySelector('.product__price-previous');

	let productSelectVariants = document.querySelectorAll('.select__product-item');
	productForm.onsubmit = (e) => {
		const productIdValue = productId.value;

		if (productIdValue === 'none') {
			formErrorAlert.style.display = 'flex';
			e.preventDefault();
		}
	};

	const sideBarSwiper = new Swiper(".mySideBarSwiper", {
		spaceBetween: 10,
		slidesPerView: 4,
		freeMode: true,
		watchSlidesProgress: true,
	});

	const mainSwiper = new Swiper(".myMainSwiper", {
		pagination: {
			el: ".swiper-pagination",
			clickable: true
		},
		loop: true,
		thumbs: {
			swiper: sideBarSwiper,
		}
	});

	function setFormValue() {
		let select = this.closest('.select');
		let productId = select.querySelector('.product__id');

		productId.value = this.dataset.variantId;
		formErrorAlert.style.display = 'none';
		variantSku.innerText = this.getAttribute('data-variant-sku');
		variantPrice.innerText = (this.getAttribute('data-variant-price') / 100).toLocaleString().replace(',', ' ') + ` грн`;
		variantComparePrice.innerText = (this.getAttribute('data-variant-compare-price') / 100).toLocaleString().replace(',', ' ') + ` грн`;
		updateQueryString('variant', this.dataset.variantId);
	}

	productSelectVariants.forEach(variant =>  {
		variant.addEventListener('click', setFormValue)
	});

	Array.from(productAboutList.children).forEach(item => {
		item.addEventListener('click', () => {
			const prevOpenedItem = productAboutList.querySelector('.is-opened');
			if (!item.classList.contains('is-opened') && prevOpenedItem) {
				prevOpenedItem.classList.toggle('is-opened');
			}
			item.classList.toggle('is-opened');
		});
	});

	function updateQueryString(key, value, url) {
		if (!url) url = window.location.href;

		let updated = ''
		var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
			hash;

		if (re.test(url)) {
			if (typeof value !== 'undefined' && value !== null) {
				updated = url.replace(re, '$1' + key + "=" + value + '$2$3');
			}
			else {
				hash = url.split('#');
				url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
				if (typeof hash[1] !== 'undefined' && hash[1] !== null) {
					url += '#' + hash[1];
				}

				updated = url;
			}
		}
		else {
			if (typeof value !== 'undefined' && value !== null) {
				var separator = url.indexOf('?') !== -1 ? '&' : '?';
				hash = url.split('#');
				url = hash[0] + separator + key + '=' + value;
				if (typeof hash[1] !== 'undefined' && hash[1] !== null) {
					url += '#' + hash[1];
				}
				updated = url;
			}
			else {
				updated = url;
			}
		}

		window.history.replaceState({ path: updated }, '', updated);
	}
</script>
