<div class="swiper mySwiper similar-slider">
	<div class="swiper-wrapper">
		{% for slider_product in slides %}
			{% if slider_product.id != product.id %}
				{% liquid
					assign product_media = slider_product.media[0]
					assign product_price = slider_product.price | money_without_trailing_zeros | replace: ',', ' '
				%}
				<div class="swiper-slide recommendation__slide">
					<div class="recommendation__good-img">
						<img alt="{{ product_media.alt }}" src={{ product_media.src | img_url: 'master' }}>
					</div>
					<div class="recommendation__good-title">{{ slider_product.title | link_to: '#' }}</div>
					<div class="recommendation__good-collection">{{ slider_product.description }}</div>
					<div class="recommendation__good-price">{{ product_price | slice: 1, product_price.size }} грн</div>
				</div>
			{% endif %}
		{% endfor %}
	</div>
	<div class="swiper-button-next">
		<img alt="next slide" src={{ "next-img.svg" | asset_url }}>
	</div>
	<div class="swiper-button-prev">
		<img alt="prev slide" src={{ "prev-img.svg" | asset_url }}>
	</div>
	<div class="recommendation__swiper-pagination">
		<div class="swiper-pagination"></div>
	</div>
</div>

<script type="module">
	import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.esm.browser.min.js';

	const productForm = document.querySelector('#product-form');
	const productId = productForm.querySelector('.product__id');
	const formErrorAlert = productForm.querySelector('.product__error-alert');
	let productSelectVariants = document.querySelectorAll('.select__product-item');

	productForm.onsubmit = (e) => {
		const productIdValue = productId.value;

		if (productIdValue === 'none') {
			console.log(productIdValue);
			formErrorAlert.style.display = 'flex';
			e.preventDefault();
		}
	};

	const recommendationSwiper = new Swiper(".recommendation__swiper", {
		slidesPerView: 2,
		slidesPerGroup: 1,
		spaceBetween: 5,
		loop: true,
		loopFillGroupWithBlank: true,
		pagination: {
			el: ".swiper-pagination",
			clickable: true,
		},
		navigation: {
			nextEl: ".swiper-button-next",
			prevEl: ".swiper-button-prev",
		},
		breakpoints: {
			991: {
				slidesPerView: 4,
				spaceBetween: 10,
				slidesPerGroup: 1,
			}
		},
	});

	const sideBarSwiper = new Swiper(".mySideBarSwiper", {
		spaceBetween: 10,
		slidesPerView: 4,
		freeMode: true,
		watchSlidesProgress: true,
	});

	const mainSwiper = new Swiper(".myMainSwiper", {
		pagination: {
			el: ".swiper-pagination",
			clickable: true
		},
		loop: true,
		thumbs: {
			swiper: sideBarSwiper,
		}
	});

	function setFormValue() {
		let select = this.closest('.select');
		let productId = select.querySelector('.product__id');

		productId.value = this.dataset.variantId;
		formErrorAlert.style.display = 'none';
	}

	productSelectVariants.forEach(variant =>  {
		variant.addEventListener('click', setFormValue)
	});
</script>

